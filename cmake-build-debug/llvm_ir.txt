declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@judge_var = dso_local global i1 0
@p= dso_local global i32 0
@q= dso_local global i32 0
@r= dso_local global i32 0
@s= dso_local global i32 0
define dso_local i32 @max(i32 %0,i32 %1) {
%3= alloca i32
store i32 %0, i32* %3
%4= alloca i32
store i32 %1, i32* %4
%5 = load i32, i32* %3
ret i32 %5
}

define dso_local i32 @min(i32 %0,i32 %1) {
%3= alloca i32
store i32 %0, i32* %3
%4= alloca i32
store i32 %1, i32* %4
%5 = load i32, i32* %3
ret i32 %5
}

define dso_local i32 @scan() {
ret i32 0
}

define dso_local i32 @main() {
store i32 88, i32* @p
store i32 66, i32* @q
store i32 155, i32* @r
store i32 15, i32* @s
%1= alloca i32
%2 = load i32, i32* @p
%3 = load i32, i32* @q
%4 = call i32 @min(i32 %2,i32 %3)
%5 = load i32, i32* @s
%6 = call i32 @scan()
%7 = call i32 @max(i32 %5,i32 %6)
%8 = call i32 @max(i32 %4,i32 %7)
store i32 %8, i32* %1
ret i32 0
}

